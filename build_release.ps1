# DCM-Nii Release Builder v2.1
# Simplified version without tools/MRIcroGL (use lightweight only for now)
param([string]$Version = "v2.0.0")

$ErrorActionPreference = "Stop"
$Timestamp = Get-Date -Format "yyyyMMdd_HHmmss"

Write-Host "`n=== DCM-Nii Auto Build Script ===" -ForegroundColor Cyan
Write-Host "Version: $Version" -ForegroundColor Green
Write-Host "Timestamp: $Timestamp`n" -ForegroundColor Green

$ProjectRoot = $PSScriptRoot
$DistDir = Join-Path $ProjectRoot "dist"
$TempDir = Join-Path $DistDir "temp_build"

if (-not (Test-Path $DistDir)) {
    New-Item -ItemType Directory -Path $DistDir | Out-Null
}

if (Test-Path $TempDir) {
    Remove-Item -Path $TempDir -Recurse -Force
}

Write-Host "[1/4] Creating lightweight package..." -ForegroundColor Yellow

$LightName = "DCM-Nii_lightweight_$Timestamp"
$LightDir = Join-Path $TempDir $LightName
New-Item -ItemType Directory -Path $LightDir -Force | Out-Null

# Copy core files
$CoreFiles = @("README.md", "requirements.txt", "dcm2niix.exe", "start_tools.bat")
foreach ($file in $CoreFiles) {
    $source = Join-Path $ProjectRoot $file
    if (Test-Path $source) {
        Copy-Item -Path $source -Destination $LightDir -Force
        Write-Host "  Copied: $file" -ForegroundColor Gray
    }
}

# Copy directories (no tools to avoid python35.zip lock issue)
$Dirs = @("src", "docs", "data", "output")
foreach ($dir in $Dirs) {
    $source = Join-Path $ProjectRoot $dir
    if (Test-Path $source) {
        Copy-Item -Path $source -Destination (Join-Path $LightDir $dir) -Recurse -Force
        Write-Host "  Copied: $dir/" -ForegroundColor Gray
    }
}

# Copy dist docs
Copy-Item -Path (Join-Path $DistDir "*.md") -Destination $LightDir -Force -ErrorAction SilentlyContinue

Write-Host "[2/4] Compressing lightweight package..." -ForegroundColor Yellow
$LightZip = Join-Path $DistDir "$LightName.zip"
Compress-Archive -Path "$LightDir\*" -DestinationPath $LightZip -Force
$LightSize = [math]::Round((Get-Item $LightZip).Length / 1MB, 2)
Write-Host "  Created: $LightName.zip ($LightSize MB)" -ForegroundColor Green

Write-Host "[3/4] Generating build report..." -ForegroundColor Yellow

$ReportContent = @"
# DCM-Nii Build Report

**Build Time**: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
**Version**: $Version  
**Package**: $LightName.zip ($LightSize MB)

## New Features in v2.0.0

- Smart ZIP extraction reuse
- Custom PatientID numbering (CLI + GUI)
- Comprehensive error reporting and categorization
- Performance optimization (90%+ faster startup)
- Real-time progress display
- Flexible temporary directory

## Package Contents

- Core Python scripts (src/)
- Documentation (docs/)
- Quick start guide
- README with all new features

## Next Steps

1. Test the package: Unzip and run start_tools.bat
2. Update GitHub Release Notes
3. Upload to GitHub Releases

Generated by build_release.ps1 v2.1
"@

$ReportPath = Join-Path $DistDir "build_report_$Timestamp.md"
$ReportContent | Out-File -FilePath $ReportPath -Encoding UTF8
Write-Host "  Report saved: build_report_$Timestamp.md" -ForegroundColor Green

Write-Host "[4/4] Cleaning temporary files..." -ForegroundColor Yellow
Remove-Item -Path $TempDir -Recurse -Force
Write-Host "  Temp files cleaned" -ForegroundColor Green

Write-Host "`n=== Build Complete ===" -ForegroundColor Cyan
Write-Host "Package: $LightName.zip ($LightSize MB)" -ForegroundColor Green
Write-Host "Report:  build_report_$Timestamp.md" -ForegroundColor Green
Write-Host "`nFiles saved to: dist/" -ForegroundColor Cyan
Write-Host "`nNote: Full package with MRIcroGL skipped due to file lock." -ForegroundColor Yellow
Write-Host "Use this lightweight package for distribution.`n" -ForegroundColor Yellow
